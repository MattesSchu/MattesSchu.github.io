[{"content":"Jetzt beginnt das herumspielen in einer Spiel-Engine mit Blender und allem drum und dran. Es ist so sch√∂n mal wieder den Default-Cube zu sehen und direkt zu l√∂sc\u0026hellip; NEIN! Der Cube in Blender wurde ein bisschen skaliert, gedreht, dupliziert geschoben und geschoben, noch ein bisschen angemalt und fertig ist mein erster Charakter ü•≥\nAlles ist eine Scene Ich muss mich noch an den Gedanken gew√∂hnen, dass alles in Godot eine Scene ist. Also habe ich ersteinmal eine Welt gebaut und mit einem Boden versehen. Anschlie√üend das Licht eingeschalten und meinen Charakter platziert. Dann den Charakter wieder entfernt, weil er seine eigene Scene bekommt üòá\nJetzt wollte ich die Selektions- und Movememntlogik in einen eigenen Bereich auslagern und dachte: \u0026ldquo;Das wird ein Object!\u0026rdquo;. Also eine Node meiner Welt hinzugef√ºgt, die nur ein Script erhalten. Losgeschrieben und an den richtigen stellen verkn√ºpft.\nvar selectionController: SelectionController = null var movementController: MovementController = null # Called when the node enters the scene tree for the first time. func _ready(): selectionController = get_node(\u0026#34;../SelectionController\u0026#34;) movementController = get_node(\u0026#34;../MovementController\u0026#34;) Jetzt k√∂nnen Scripte aber auch als variable direkt mit preload verwendet werden. Ist das dann eine Instanz dieser Klasse? Ist dann doch nicht alles eine Scene? Das preload ist auch nicht n√∂tig, wenn class_name bei dem einzubindenden Script verwendet wurde. Dann ist die Klasse direkt abrufbar.\nRaycasting und Pfade Ein bisschen Selection-Control hier, eine Instanzierung von Entities dort, arbeiten mit Collisions (Layer, Static \u0026hellip;.) et voil√† - ich habe ein simples aber nettes herumkommandieren von meinen Einheiten. Dabei auch gleich ein paar Tastenkombination umgesetzt:\nlinks+click alt+links+click str+links+click ... Bug 01 Das ist nicht der allererste Fehler, den ich bis jetzt geschrieben habe, aber ein Problem, das ich jetzt noch nicht direkt l√∂sen m√∂chte. Ich muss halt die Collision mit dem Spielermodell beim Rechts+Click ignorieren und vielleicht braucht meine Welt auch Gravity?! Ich habe mich aber sehr gefreut dar√ºber üôÉ\nB√§ume pflanzen - kann ich Vielleich liegt es an der Weihnachtszeit und meinem tristen Spielfeld\u0026hellip; Deswegen habe ich mir ein paar B√§umchen gepflanzt. Ich habe noch keine Ahnung welchen Style das Spiel haben wird, aber in der Low-Poly Welt konnte ich immer ziemlich schnell brauchbare Gegenst√§nde modellieren üôÉ Jetzt bekam ich probleme mit der move_and_slide Methode, die meinen Character an der Baumgrenze einfach festgesetzt hat. Also nehme ich mit, dass f√ºr mein Spiel aktuell move_and_collide besser geeignet ist. In Zukunft sollte ich mir auch den NavigationServer3D anschauen.\nDer erste Gegner ist da Hier ist es, der Schrecken aus der Tiefe, ein Koloss der alten Zeit, der Terror aus dem All. Ganz ehrlich, ich habe noch keine Ahnung wo es hingeht und was die Geschichte wird. F√ºr meinen ersten POC ist das auch nicht relevant. Hauptsache ist, dass meine Minions verfolgt und gefressen werden üòà\nHacky, hacky, eine Sphere-Collision eingebaut, die Pfadfindung grob kopiert und meiner kleinen Einheit wird hinterhergelaufen üòÖ\nWir brauchen mehr Damage Langsam f√ºgt sich das alles ein bisschen mehr zusammen. Auch mit mehr Scripten und Code kann versucht werden, eine grobe Struktur zu Bauen. Generalisierte Spielobjekte mit Teamzugeh√∂rigkeit und Angriffen, die sich abmelden, wenn sie kein Leben mehr haben und von der Spielfl√§che verschwinden.\nRiggeldy, Wobbeldy Endlich wieder Riggen in Blender ü•≥ Es bringt zu viel Spa√ü, seine Spielobjekte zum Leben zu erwecken. Der Gltf Export mit den Actions war ein kleiner Krampf, aber mit einem Momentanen Workaround hat das auch funktioniert. Jetzt kann dir Jagd so richtig beginnen.\n","permalink":"https://mattesschu.github.io/posts/godot/01-new-game/","summary":"Jetzt beginnt das herumspielen in einer Spiel-Engine mit Blender und allem drum und dran. Es ist so sch√∂n mal wieder den Default-Cube zu sehen und direkt zu l√∂sc\u0026hellip; NEIN! Der Cube in Blender wurde ein bisschen skaliert, gedreht, dupliziert geschoben und geschoben, noch ein bisschen angemalt und fertig ist mein erster Charakter ü•≥\nAlles ist eine Scene Ich muss mich noch an den Gedanken gew√∂hnen, dass alles in Godot eine Scene ist.","title":"Wo gehts lang?"},{"content":"Ungeachtet dessen, was bei Unity geschieht, habe ich mich f√ºr Godot entschieden. Der √úbergang zu einer neuen IDE und Skriptsprache ist eine willkommene Herausforderung. Bisherige Erkenntnisse:\nJede Entit√§t in Godot ist eine Szene. Der Wechsel zwischen 2D und 3D ist nahtlos. Godot bietet ein intuitives und erfreuliches Entwicklungserlebnis. Die Installation ist simpel, und innerhalb von Minuten kontrollierte ich bereits den Godot-Charakter mit meiner Tastatur.\nfunc _init(): print(\u0026#34;Hello, Godot!\u0026#34;) Das erste 2D Spiel Auf der Jagd nach weiteren Erkenntnissen erschlie√üe ich die n√§chste Quest. Das Schreiben eines Dodge Spiels mit einer braunen Qualle. Aber ersteinmal gehen lernen.\nDie Animationen sind schon irgendwie cute. Aber der Flip beim Down-Walk ist schon ein bisschen irritierende. Aber diese Massen an Monstern die ich dann losgelassen habe f√ºhlen sich irgendwie Falsch an. Lag nat√ºrlich daran, dass ich die Monster nicht auf dem Ende vom Timer freilasse, sondern mit jedem einzelnen Frame üò∂.\nDann noch schnell in das 3d reingeschnuppert Ja okay, ich habe jetzt Boxen mit Collidern versehen und cute Incognitos gegeneinander antreten lassen. Nette Idee mit dem springen und dem Platzieren von Zylindern au√üerhalb des Views der Kamera.\nIrgendwie bin ich hooked und gespannt auf die n√§chsten Schritte. Ich habe noch √ºberhaupt keinen √úberblick, welche Nodes wie verstrickt werden k√∂nnen und bin ein bisschen von dem Kamera-Pivot irritiert\u0026hellip; Aber ich werde ihn verwenden und schauen was passiert\nDas eigene Spiel Nun ist es Zeit, ein Spielkonzept zu entwickeln und einen schnellen Proof of Concept zu starten.\n","permalink":"https://mattesschu.github.io/posts/godot/00-init/","summary":"Ungeachtet dessen, was bei Unity geschieht, habe ich mich f√ºr Godot entschieden. Der √úbergang zu einer neuen IDE und Skriptsprache ist eine willkommene Herausforderung. Bisherige Erkenntnisse:\nJede Entit√§t in Godot ist eine Szene. Der Wechsel zwischen 2D und 3D ist nahtlos. Godot bietet ein intuitives und erfreuliches Entwicklungserlebnis. Die Installation ist simpel, und innerhalb von Minuten kontrollierte ich bereits den Godot-Charakter mit meiner Tastatur.\nfunc _init(): print(\u0026#34;Hello, Godot!\u0026#34;) Das erste 2D Spiel Auf der Jagd nach weiteren Erkenntnissen erschlie√üe ich die n√§chste Quest.","title":"Moin Godot"}]